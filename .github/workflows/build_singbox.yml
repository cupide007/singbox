name: Update sing-box

on:
  workflow_dispatch:
  schedule:
    - cron: "30 18 * * *"
  push:
    branches:
      - main
    paths-ignore:
      - "README.md"
      - "LICENSE"

jobs:
  go:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.go.outputs.version }}
    steps:
      - name: Get `Go` latest version
        id: go
        run: |
          echo version=$(curl -sSL https://raw.githubusercontent.com/actions/go-versions/update-versions-manifest-file/versions-manifest.json | grep '"version"' | head -1 | awk -F'"' '{print $4}') >> $GITHUB_OUTPUT

  puernya:
    runs-on: ubuntu-latest
    needs: go
    outputs:
      puernya_version: ${{ steps.puernya.outputs.puernya_version }}
      puernya_tags: ${{ steps.puernya.outputs.puernya_tags }}
    steps:
      - name: Checkout `building`
        uses: actions/checkout@v4
        with:
          repository: PuerNya/sing-box
          ref: building
          fetch-depth: 0

      - name: Setup `Go`
        uses: actions/setup-go@v5
        with:
          go-version: ${{ needs.go.outputs.version }}
          
      # 修复 ECH 标签问题
      - name: Fix ECH build tags
        run: |
          rm -f common/tls/ech_tag_stub.go || true
          sed -i '/ech_tag_stub.go/d' common/tls/tls.go || true

      - name: Get `sing-box PuerNya` version
        id: puernya
        run: |
          git remote add sekai https://github.com/SagerNet/sing-box.git
          git fetch --tags sekai
          full_version=$(CGO_ENABLED=0 go run ./cmd/internal/read_tag)
          main_version=$(echo $full_version | cut -d '-' -f 1)
          echo "Full PuerNya version: $full_version"
          echo "Main PuerNya version: $main_version"
          echo "puernya_version=$main_version" >> $GITHUB_OUTPUT
          echo "puernya_tags=with_quic,with_dhcp,with_wireguard,with_shadowsocksr,with_utls,with_clash_api,with_gvisor" >> $GITHUB_OUTPUT
  
  puernya_cross:
    strategy:
      matrix:
        include:
          # linux
          - { name: linux-amd64, goos: linux, goarch: amd64, goamd64: v1 }
          - { name: linux-amd64-v3, goos: linux, goarch: amd64, goamd64: v3 }
          - { name: linux-armv5, goos: linux, goarch: arm, goarm: 5 }
          - { name: linux-armv6, goos: linux, goarch: arm, goarm: 6 }
          - { name: linux-armv7, goos: linux, goarch: arm, goarm: 7 }
          - { name: linux-arm64, goos: linux, goarch: arm64 }
          - { name: linux-mips-softfloat, goos: linux, goarch: mips, gomips: softfloat }
          - { name: linux-mipsle-softfloat, goos: linux, goarch: mipsle, gomips: softfloat }
          - { name: linux-mipsle-hardfloat, goos: linux, goarch: mipsle, gomips: hardfloat }
          # android
          - { name: android-arm64, goos: android, goarch: arm64 }
          # windows
          - { name: windows-amd64, goos: windows, goarch: amd64, goamd64: v1 }
          - { name: windows-amd64-v3, goos: windows, goarch: amd64, goamd64: v3 }
          - { name: windows-arm64, goos: windows, goarch: arm64 }

      fail-fast: false
    runs-on: ubuntu-latest
    needs:
      - go
      - puernya
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOAMD64: ${{ matrix.goamd64 }}
      GOARM: ${{ matrix.goarm }}
      GOMIPS: ${{ matrix.gomips }}
      CGO_ENABLED: 0
      puernya_TAGS: ${{ needs.puernya.outputs.puernya_tags }}
      puernya_VERSION: ${{ needs.puernya.outputs.puernya_version }}
    steps:
      - name: Checkout `building`
        uses: actions/checkout@v4
        with:
          repository: PuerNya/sing-box
          ref: building
          fetch-depth: 1

      - name: Fix sniff
        run: sed -i 's/sniffHosts/sniffHost/' ./experimental/clashapi/trafficontrol/tracker.go
          
      # 确保解决 ECH 标签问题
      - name: Fix ECH build tags
        run: |
          rm -f common/tls/ech_tag_stub.go || true
          sed -i '/ech_tag_stub.go/d' common/tls/tls.go || true

      - name: Setup `Go`
        uses: actions/setup-go@v5
        with:
          go-version: ${{ needs.go.outputs.version }}

      # 修复 Windows 随机数生成器问题
      - name: Patch Windows RNG for older Go versions
        if: ${{ matrix.goos == 'windows' && needs.go.outputs.version < '1.20.0' }}
        run: |
          go env GOROOT
          curl -o rand_patch.diff https://patch-diff.githubusercontent.com/raw/golang/go/pull/53119.diff
          patch -p1 -d $(go env GOROOT) < rand_patch.diff || true

      - name: Build `sing-box PuerNya` core
        id: build
        run: go build -v -trimpath -ldflags "-checklinkname=0 -X 'github.com/sagernet/sing-box/constant.Version=${puernya_VERSION}' -s -w -buildid=" -tags "${puernya_TAGS}" ./cmd/sing-box

      # 对于Windows平台，重命名输出文件为.exe
      - name: Rename for Windows
        if: ${{ matrix.goos == 'windows' }}
        run: |
          if [ -f sing-box ]; then
            mv sing-box sing-box.exe
          else
            echo "No sing-box file found for renaming"
          fi

      - name: Upload files to workspace
        uses: actions/upload-artifact@v4
        with:
          name: sing-box-puernya-${{ matrix.name }}
          path: ${{ (matrix.goos == 'windows' && 'sing-box.exe') || 'sing-box' }}
          compression-level: 9
          
  dev:
    runs-on: ubuntu-latest
    needs: go
    outputs:
      dev_version: ${{ steps.dev.outputs.dev_version }}
      dev_tags: ${{ steps.dev.outputs.dev_tags }}
    steps:
      - name: Checkout `dev`
        uses: actions/checkout@v4
        with:
          repository: SagerNet/sing-box
          ref: dev
          fetch-depth: 0

      - name: Setup `Go`
        uses: actions/setup-go@v5
        with:
          go-version: ${{ needs.go.outputs.version }}
          
      # 修复 dev 分支的 ECH 问题
      - name: Fix ECH build tags
        run: |
          rm -f common/tls/ech_tag_stub.go || true
          sed -i '/ech_tag_stub.go/d' common/tls/tls.go || true

      - name: Get `sing-box Dev` version
        id: dev
        run: |
          git remote add sekai https://github.com/SagerNet/sing-box.git
          git fetch --tags sekai
          dev_version=$(CGO_ENABLED=0 go run ./cmd/internal/read_tag)
          echo dev_version=$dev_version >> $GITHUB_OUTPUT
          echo dev_tags=with_gvisor,with_dhcp,with_wireguard,with_clash_api,with_quic,with_utls >> $GITHUB_OUTPUT
          
  dev_cross:
    strategy:
      matrix:
        include:
          # linux
          - { name: linux-amd64, goos: linux, goarch: amd64, goamd64: v1 }
          - { name: linux-amd64-v3, goos: linux, goarch: amd64, goamd64: v3 }
          - { name: linux-armv5, goos: linux, goarch: arm, goarm: 5 }
          - { name: linux-armv6, goos: linux, goarch: arm, goarm: 6 }
          - { name: linux-armv7, goos: linux, goarch: arm, goarm: 7 }
          - { name: linux-arm64, goos: linux, goarch: arm64 }
          - { name: linux-mips-softfloat, goos: linux, goarch: mips, gomips: softfloat }
          - { name: linux-mipsle-softfloat, goos: linux, goarch: mipsle, gomips: softfloat }
          - { name: linux-mipsle-hardfloat, goos: linux, goarch: mipsle, gomips: hardfloat }
          # android
          - { name: android-arm64, goos: android, goarch: arm64 }
          # windows
          - { name: windows-amd64, goos: windows, goarch: amd64, goamd64: v1 }
          - { name: windows-amd64-v3, goos: windows, goarch: amd64, goamd64: v3 }
          - { name: windows-arm64, goos: windows, goarch: arm64 }

      fail-fast: false
    runs-on: ubuntu-latest
    needs:
      - go
      - dev
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOAMD64: ${{ matrix.goamd64 }}
      GOARM: ${{ matrix.goarm }}
      GOMIPS: ${{ matrix.gomips }}
      CGO_ENABLED: 0
      dev_TAGS: ${{ needs.dev.outputs.dev_tags }}
      dev_VERSION: ${{ needs.dev.outputs.dev_version }}
    steps:
      - name: Checkout `dev`
        uses: actions/checkout@v4
        with:
          repository: SagerNet/sing-box
          ref: dev
          fetch-depth: 1

      # 确保解决 ECH 问题
      - name: Fix ECH build tags
        run: |
          rm -f common/tls/ech_tag_stub.go || true
          sed -i '/ech_tag_stub.go/d' common/tls/tls.go || true

      - name: Setup `Go`
        uses: actions/setup-go@v5
        with:
          go-version: ${{ needs.go.outputs.version }}

      # 修复 Windows 随机数生成器问题
      - name: Patch Windows RNG for older Go versions
        if: ${{ matrix.goos == 'windows' && needs.go.outputs.version < '1.20.0' }}
        run: |
          go env GOROOT
          curl -o rand_patch.diff https://patch-diff.githubusercontent.com/raw/golang/go/pull/53119.diff
          patch -p1 -d $(go env GOROOT) < rand_patch.diff || true

      - name: Build `sing-box Dev` core
        id: build
        run: go build -v -trimpath -ldflags "-checklinkname=0 -X 'github.com/sagernet/sing-box/constant.Version=${dev_VERSION}' -s -w -buildid=" -tags "${dev_TAGS}" ./cmd/sing-box

      # 对于Windows平台，重命名输出文件为.exe
      - name: Rename for Windows
        if: ${{ matrix.goos == 'windows' }}
        run: |
          if [ -f sing-box ]; then
            mv sing-box sing-box.exe
          else
            echo "No sing-box file found for renaming"
          fi

      - name: Upload files to workspace
        uses: actions/upload-artifact@v4
        with:
          name: sing-box-dev-${{ matrix.name }}
          path: ${{ (matrix.goos == 'windows' && 'sing-box.exe') || 'sing-box' }}
          compression-level: 9


  push_sing_box:
    needs:
      - puernya_cross
      - puernya
      - dev_cross
      - dev
    runs-on: ubuntu-latest
    env:
      puernya_VERSION: ${{ needs.puernya.outputs.puernya_version }}
      dev_VERSION: ${{ needs.dev.outputs.dev_version }}
    steps:
      - name: Clone Repository
        uses: actions/checkout@v4
        
      - name: Download files from workspace
        uses: actions/download-artifact@v4
        with:
          path: ./tmp-sing-box/

      - name: List downloaded files
        run: ls -R ./tmp-sing-box/

      - name: Prepare directories
        run: |
          mkdir -p ./sing-box/
          mkdir -p ./tmp-sing-box/compress/

      - name: Process non-Windows platforms
        run: |
          # 定义支持的Linux和Android架构
          linux_archs=(amd64 amd64-v3 armv5 armv6 armv7 arm64 mips-softfloat mipsle-hardfloat mipsle-softfloat)
          android_archs=(arm64)
          
          # PuerNya Linux版本
          for arch in "${linux_archs[@]}"; do
            if [ -f "./tmp-sing-box/sing-box-puernya-linux-${arch}/sing-box" ]; then
              mv -f "./tmp-sing-box/sing-box-puernya-linux-${arch}/sing-box" ./tmp-sing-box/CrashCore
              chmod +x ./tmp-sing-box/CrashCore
              tar --no-same-owner -czf "./tmp-sing-box/compress/sing-box-puernya-linux-${arch}-${{ env.puernya_VERSION }}.tar.gz" -C ./tmp-sing-box/ ./CrashCore
            fi
          done
          
          # PuerNya Android版本
          for arch in "${android_archs[@]}"; do
            if [ -f "./tmp-sing-box/sing-box-puernya-android-${arch}/sing-box" ]; then
              mv -f "./tmp-sing-box/sing-box-puernya-android-${arch}/sing-box" ./tmp-sing-box/CrashCore
              chmod +x ./tmp-sing-box/CrashCore
              tar --no-same-owner -czf "./tmp-sing-box/compress/sing-box-puernya-android-${arch}-${{ env.puernya_VERSION }}.tar.gz" -C ./tmp-sing-box/ ./CrashCore
            fi
          done
          
          # Dev Linux版本
          for arch in "${linux_archs[@]}"; do
            if [ -f "./tmp-sing-box/sing-box-dev-linux-${arch}/sing-box" ]; then
              mv -f "./tmp-sing-box/sing-box-dev-linux-${arch}/sing-box" ./tmp-sing-box/CrashCore
              chmod +x ./tmp-sing-box/CrashCore
              tar --no-same-owner -czf "./tmp-sing-box/compress/sing-box-dev-linux-${arch}-${{ env.dev_VERSION }}.tar.gz" -C ./tmp-sing-box/ ./CrashCore
            fi
          done
          
          # Dev Android版本
          for arch in "${android_archs[@]}"; do
            if [ -f "./tmp-sing-box/sing-box-dev-android-${arch}/sing-box" ]; then
              mv -f "./tmp-sing-box/sing-box-dev-android-${arch}/sing-box" ./tmp-sing-box/CrashCore
              chmod +x ./tmp-sing-box/CrashCore
              tar --no-same-owner -czf "./tmp-sing-box/compress/sing-box-dev-android-${arch}-${{ env.dev_VERSION }}.tar.gz" -C ./tmp-sing-box/ ./CrashCore
            fi
          done

      - name: Process Windows platforms
        run: |
          windows_archs=(amd64 amd64-v3 arm64)
          
          # PuerNya Windows版本
          for arch in "${windows_archs[@]}"; do
            if [ -f "./tmp-sing-box/sing-box-puernya-windows-${arch}/sing-box.exe" ]; then
              mv -f "./tmp-sing-box/sing-box-puernya-windows-${arch}/sing-box.exe" "./sing-box/sing-box-puernya-windows-${arch}-${{ env.puernya_VERSION }}.exe"
            fi
          done
          
          # Dev Windows版本
          for arch in "${windows_archs[@]}"; do
            if [ -f "./tmp-sing-box/sing-box-dev-windows-${arch}/sing-box.exe" ]; then
              mv -f "./tmp-sing-box/sing-box-dev-windows-${arch}/sing-box.exe" "./sing-box/sing-box-dev-windows-${arch}-${{ env.dev_VERSION }}.exe"
            fi
          done

      - name: Move all files to final location
        run: |
          mv -f ./tmp-sing-box/compress/* ./sing-box/
          rm -rf ./tmp-sing-box

      - name: Release and upload `sing-box` assets (dev release)
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          release_name: "${{ env.dev_VERSION }}"
          prerelease: true
          tag: "v${{ env.dev_VERSION }}"
          overwrite: true
          body: "[dev 版](https://github.com/PuerNya/sing-box/tree/building)Release 版、Dev 版内核"
          file_glob: true
          file: ./sing-box/*
          
      - name: Release and upload `sing-box` assets (latest release)
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          release_name: "${{ env.puernya_VERSION }}"
          tag: "v${{ env.puernya_VERSION }}"
          overwrite: true
          body: "[PuerNya 版](https://github.com/PuerNya/sing-box/tree/building)Release 版、Dev 版内核"
          file_glob: true
          file: ./sing-box/*

      - name: Commit and push `sing-box` branch
        run: |
          cd ./sing-box/ || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b sing-box
          git add . && git commit -m "更新 sing-box 内核: PuerNya v${{ env.puernya_VERSION }}, Dev v${{ env.dev_VERSION }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin sing-box

      - name: Purge jsDelivr CDN
        run: |
          cd ./sing-box/ || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@sing-box/$file"
          done
